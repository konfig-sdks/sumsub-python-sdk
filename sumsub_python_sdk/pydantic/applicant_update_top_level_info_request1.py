# coding: utf-8

"""
    Sumsub API

    Sumsub is the one verification platform to secure the whole user journey. With Sumsub's customizable KYC, KYB, transaction monitoring and fraud prevention solutions, you can orchestrate your verification process, welcome more customers worldwide, meet compliance requirements, reduce costs and protect your business.  Sumsub has over 2,000 clients in fintech, crypto, transportation, trading, e-commerce and gaming industries including Binance, Wirex, Avis, Bybit, Huobi, Unlimit, Flutter, Kaizen Gaming, and TransferGo.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from sumsub_python_sdk.pydantic.applicant_update_top_level_info_request1_metadata import ApplicantUpdateTopLevelInfoRequest1Metadata
from sumsub_python_sdk.pydantic.applicant_update_top_level_info_request1_questionnaires import ApplicantUpdateTopLevelInfoRequest1Questionnaires

class ApplicantUpdateTopLevelInfoRequest1(BaseModel):
    # A unique applicant identifier.
    id: str = Field(alias='id')

    # An external applicant identifier.
    external_user_id: typing.Optional[str] = Field(None, alias='externalUserId')

    # A new email address that you want to assign to the given applicant.
    email: typing.Optional[str] = Field(None, alias='email')

    # A new phone number that you want to assign to the given applicant.
    phone: typing.Optional[str] = Field(None, alias='phone')

    # A new [source key](https://docs.sumsub.com/reference) that you want to assign to the given applicant.
    source_key: typing.Optional[str] = Field(None, alias='sourceKey')

    # The language, in which the applicant should see the verification results.
    lang: typing.Optional[str] = Field(None, alias='lang')

    questionnaires: typing.Optional[ApplicantUpdateTopLevelInfoRequest1Questionnaires] = Field(None, alias='questionnaires')

    metadata: typing.Optional[ApplicantUpdateTopLevelInfoRequest1Metadata] = Field(None, alias='metadata')

    # Marks an applicant as inactive if set to `true`. The applicant will not be considered a duplicate. SDKs will not initiate checks for this applicant.
    deleted: typing.Optional[bool] = Field(None, alias='deleted')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
