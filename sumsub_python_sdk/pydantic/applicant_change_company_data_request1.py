# coding: utf-8

"""
    Sumsub API

    Sumsub is the one verification platform to secure the whole user journey. With Sumsub's customizable KYC, KYB, transaction monitoring and fraud prevention solutions, you can orchestrate your verification process, welcome more customers worldwide, meet compliance requirements, reduce costs and protect your business.  Sumsub has over 2,000 clients in fintech, crypto, transportation, trading, e-commerce and gaming industries including Binance, Wirex, Avis, Bybit, Huobi, Unlimit, Flutter, Kaizen Gaming, and TransferGo.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from sumsub_python_sdk.pydantic.applicant_change_company_data_request1_addresses import ApplicantChangeCompanyDataRequest1Addresses
from sumsub_python_sdk.pydantic.applicant_change_company_data_request1_beneficiaries import ApplicantChangeCompanyDataRequest1Beneficiaries

class ApplicantChangeCompanyDataRequest1(BaseModel):
    # Name of the company.
    company_name: str = Field(alias='companyName')

    # Registration number.
    registration_number: str = Field(alias='registrationNumber')

    # A three-letter country code (e.g. `DEU`).
    country: typing.Optional[str] = Field(None, alias='country')

    # Legal name.
    legal_address: typing.Optional[str] = Field(None, alias='legalAddress')

    # Date of incorporation (format `YYYY-mm-dd`, e.g. 2001-09-25).
    incorporated_on: typing.Optional[str] = Field(None, alias='incorporatedOn')

    # Type of entity.
    type: typing.Optional[str] = Field(None, alias='type')

    # Email address.
    email: typing.Optional[str] = Field(None, alias='email')

    # Description of the control scheme of the group of entities.
    control_scheme: typing.Optional[str] = Field(None, alias='controlScheme')

    # Phone number.
    phone: typing.Optional[str] = Field(None, alias='phone')

    # Taxpayer registration number/Code of taxpayer registration.
    tax_id: typing.Optional[str] = Field(None, alias='taxId')

    # Location of registration.
    registration_location: typing.Optional[str] = Field(None, alias='registrationLocation')

    # Website's URL.
    website: typing.Optional[str] = Field(None, alias='website')

    # Postal address.
    postal_address: typing.Optional[str] = Field(None, alias='postalAddress')

    beneficiaries: typing.Optional[ApplicantChangeCompanyDataRequest1Beneficiaries] = Field(None, alias='beneficiaries')

    addresses: typing.Optional[ApplicantChangeCompanyDataRequest1Addresses] = Field(None, alias='addresses')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
