# coding: utf-8

"""
    Sumsub API

    Sumsub is the one verification platform to secure the whole user journey. With Sumsub's customizable KYC, KYB, transaction monitoring and fraud prevention solutions, you can orchestrate your verification process, welcome more customers worldwide, meet compliance requirements, reduce costs and protect your business.  Sumsub has over 2,000 clients in fintech, crypto, transportation, trading, e-commerce and gaming industries including Binance, Wirex, Avis, Bybit, Huobi, Unlimit, Flutter, Kaizen Gaming, and TransferGo.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from sumsub_python_sdk.pydantic.transaction_bulk_import_request_data_applicant import TransactionBulkImportRequestDataApplicant
from sumsub_python_sdk.pydantic.transaction_bulk_import_request_data_counterparty import TransactionBulkImportRequestDataCounterparty
from sumsub_python_sdk.pydantic.transaction_bulk_import_request_data_info import TransactionBulkImportRequestDataInfo

class TransactionBulkImportRequestData(BaseModel):
    # A unique transaction identifier.
    txn_id: str = Field(alias='txnId')

    info: typing.Optional[TransactionBulkImportRequestDataInfo] = Field(None, alias='info')

    # Time when the transaction was initiated (format `yyyy-MM-dd HH:mm:ss+XXXX`, e.g. 2022-11-24 23:37:02+0000).
    txn_date: typing.Optional[date] = Field(None, alias='txnDate')

    # Transaction properties. Map of strings - JSON of custom keys and string values.
    props: typing.Optional[str] = Field(None, alias='props')

    applicant: typing.Optional[TransactionBulkImportRequestDataApplicant] = Field(None, alias='applicant')

    counterparty: typing.Optional[TransactionBulkImportRequestDataCounterparty] = Field(None, alias='counterparty')

    # Transaction type. Takes predefined values: `finance`/`gamblingBet`/`gamblingLimitChange`/`kyc`/`login`/`signup`/`passwordChange`/`twoFaReset`/`travelRule` (`finance` by default).
    type: typing.Optional[str] = Field(None, alias='type')

    # Source Key indication to separate accesses to transactions.
    source_key: typing.Optional[str] = Field(None, alias='sourceKey')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
