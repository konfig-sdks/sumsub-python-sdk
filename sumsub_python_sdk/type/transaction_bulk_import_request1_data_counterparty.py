# coding: utf-8

"""
    Sumsub API

    Sumsub is the one verification platform to secure the whole user journey. With Sumsub's customizable KYC, KYB, transaction monitoring and fraud prevention solutions, you can orchestrate your verification process, welcome more customers worldwide, meet compliance requirements, reduce costs and protect your business.  Sumsub has over 2,000 clients in fintech, crypto, transportation, trading, e-commerce and gaming industries including Binance, Wirex, Avis, Bybit, Huobi, Unlimit, Flutter, Kaizen Gaming, and TransferGo.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from sumsub_python_sdk.type.transaction_bulk_import_request1_data_counterparty_address import TransactionBulkImportRequest1DataCounterpartyAddress
from sumsub_python_sdk.type.transaction_bulk_import_request1_data_counterparty_device import TransactionBulkImportRequest1DataCounterpartyDevice
from sumsub_python_sdk.type.transaction_bulk_import_request1_data_counterparty_id_docs import TransactionBulkImportRequest1DataCounterpartyIdDocs
from sumsub_python_sdk.type.transaction_bulk_import_request1_data_counterparty_institution_info import TransactionBulkImportRequest1DataCounterpartyInstitutionInfo
from sumsub_python_sdk.type.transaction_bulk_import_request1_data_counterparty_payment_method import TransactionBulkImportRequest1DataCounterpartyPaymentMethod

class RequiredTransactionBulkImportRequest1DataCounterparty(TypedDict):
    # An external identifier of the transaction participant (applicant or counterparty). Each participant must have a unique identifier that must be reused during all subsequent transactions. Make sure to use the same `externalUserID` for the same counterparty or applicant.
    externalUserId: str

    # Full name of the participant.
    fullName: str

    # Participant entity type: `company` or `individual`. Set to `individual` by default.
    type: str

class OptionalTransactionBulkImportRequest1DataCounterparty(TypedDict, total=False):
    address: TransactionBulkImportRequest1DataCounterpartyAddress

    institutionInfo: TransactionBulkImportRequest1DataCounterpartyInstitutionInfo

    paymentMethod: TransactionBulkImportRequest1DataCounterpartyPaymentMethod

    device: TransactionBulkImportRequest1DataCounterpartyDevice

    idDocs: TransactionBulkImportRequest1DataCounterpartyIdDocs

class TransactionBulkImportRequest1DataCounterparty(RequiredTransactionBulkImportRequest1DataCounterparty, OptionalTransactionBulkImportRequest1DataCounterparty):
    pass
