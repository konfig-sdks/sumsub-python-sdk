# coding: utf-8

"""
    Sumsub API

    Sumsub is the one verification platform to secure the whole user journey. With Sumsub's customizable KYC, KYB, transaction monitoring and fraud prevention solutions, you can orchestrate your verification process, welcome more customers worldwide, meet compliance requirements, reduce costs and protect your business.  Sumsub has over 2,000 clients in fintech, crypto, transportation, trading, e-commerce and gaming industries including Binance, Wirex, Avis, Bybit, Huobi, Unlimit, Flutter, Kaizen Gaming, and TransferGo.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from sumsub_python_sdk.type.applicant_submit_transaction_for_non_existing_request1_applicant import ApplicantSubmitTransactionForNonExistingRequest1Applicant
from sumsub_python_sdk.type.applicant_submit_transaction_for_non_existing_request1_counterparty import ApplicantSubmitTransactionForNonExistingRequest1Counterparty
from sumsub_python_sdk.type.applicant_submit_transaction_for_non_existing_request1_info import ApplicantSubmitTransactionForNonExistingRequest1Info

class RequiredApplicantSubmitTransactionForNonExistingRequest1(TypedDict):
    info: ApplicantSubmitTransactionForNonExistingRequest1Info

    # A unique transaction identification number.
    txnId: str

    applicant: ApplicantSubmitTransactionForNonExistingRequest1Applicant

    counterparty: ApplicantSubmitTransactionForNonExistingRequest1Counterparty

class OptionalApplicantSubmitTransactionForNonExistingRequest1(TypedDict, total=False):
    # Date and time when the transaction was initiated (format `yyyy-MM-dd HH:mm:ss+XXXX`, e.g. 2022-11-24 23:37:02+0000).
    txnDate: date

    # Transaction properties. Map of strings (JSON) of custom keys and string values.
    props: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    # A transaction type. Expects values: </br> <ul>   <li><code>finance</code>(default)</li>   <li><code>gamblingBet</code></li>   <li><code>gamblingLimitChange</code></li>   <li><code>gamblingBonusChange</code></li>   <li><code>kyc</code></li>   <li><code>travelRule</code></li>   <li><code>userPlatformEvent</code></li>   <ul>     <li><code>login</code></li>     <li><code>signup</code></li>     <li><code>passwordChange</code></li>     <li><code>twoFaReset</code></li>   </ul> </ul>
    type: str

    # A source key indication to separate access to transactions.
    sourceKey: str

class ApplicantSubmitTransactionForNonExistingRequest1(RequiredApplicantSubmitTransactionForNonExistingRequest1, OptionalApplicantSubmitTransactionForNonExistingRequest1):
    pass
